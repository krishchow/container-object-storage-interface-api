/*
Copyright 2020 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kubernetes-sigs/container-object-storage-interface-api/apis/objectstorage.k8s.io/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BucketRequestLister helps list BucketRequests.
type BucketRequestLister interface {
	// List lists all BucketRequests in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.BucketRequest, err error)
	// BucketRequests returns an object that can list and get BucketRequests.
	BucketRequests(namespace string) BucketRequestNamespaceLister
	BucketRequestListerExpansion
}

// bucketRequestLister implements the BucketRequestLister interface.
type bucketRequestLister struct {
	indexer cache.Indexer
}

// NewBucketRequestLister returns a new BucketRequestLister.
func NewBucketRequestLister(indexer cache.Indexer) BucketRequestLister {
	return &bucketRequestLister{indexer: indexer}
}

// List lists all BucketRequests in the indexer.
func (s *bucketRequestLister) List(selector labels.Selector) (ret []*v1alpha1.BucketRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BucketRequest))
	})
	return ret, err
}

// BucketRequests returns an object that can list and get BucketRequests.
func (s *bucketRequestLister) BucketRequests(namespace string) BucketRequestNamespaceLister {
	return bucketRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BucketRequestNamespaceLister helps list and get BucketRequests.
type BucketRequestNamespaceLister interface {
	// List lists all BucketRequests in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.BucketRequest, err error)
	// Get retrieves the BucketRequest from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.BucketRequest, error)
	BucketRequestNamespaceListerExpansion
}

// bucketRequestNamespaceLister implements the BucketRequestNamespaceLister
// interface.
type bucketRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BucketRequests in the indexer for a given namespace.
func (s bucketRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BucketRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BucketRequest))
	})
	return ret, err
}

// Get retrieves the BucketRequest from the indexer for a given namespace and name.
func (s bucketRequestNamespaceLister) Get(name string) (*v1alpha1.BucketRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("bucketrequest"), name)
	}
	return obj.(*v1alpha1.BucketRequest), nil
}
